version: '3.8'

services:
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - clinic-net
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5000:80"
    networks:
      - clinic-net
    restart: unless-stopped

  config-server-ms:
    image: mohitgupta02/config-server-ms:latest
    container_name: config-server-ms
    ports:
      - 8080:8080
    depends_on:
      - servicereg
    networks:
      - microservice-network
      - clinic-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  servicereg:
    image: mohitgupta02/servicereg:latest
    container_name: servicereg
    ports:
      - "8761:8761"
    depends_on:
      - zipkin
      - postgres
      - pgadmin
    networks:
      - microservice-network
      - clinic-net

  appointmentms:
    image: mohitgupta02/appointmentms:latest
    container_name: appointment
    ports:
      - 8083:8083
    depends_on:
      - servicereg
      - config-server-ms
    networks:
      - microservice-network
      - clinic-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  doctorms:
    image: mohitgupta02/doctorms:latest
    container_name: doctor
    ports:
      - 8081:8081
    depends_on:
      - servicereg
      - config-server-ms
    networks:
      - microservice-network
      - clinic-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://servicereg:8761/eureka

  patientms:
    image: mohitgupta02/patientms:latest
    container_name: patient
    ports:
      - 8082:8082
    depends_on:
      - servicereg
      - config-server-ms
    networks:
      - microservice-network
      - clinic-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - 9411:9411
    networks:
      - clinic-net
      - microservice-network

  gateway-ms:
    image: mohitgupta02/gateway-ms:latest
    ports:
      - 8084:8084
    depends_on:
      - servicereg
    networks:
      - microservice-network
      - clinic-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker
#  eureka-server:
#    image: openjdk:17
#    container_name: eureka-server
#    working_dir: /app
#    volumes:
#      - ./eureka-server/target:/app
#    command: ["java", "-jar", "eureka-server-0.0.1-SNAPSHOT.jar"]
#    ports:
#      - "8761:8761"
#    networks:
#      - clinic-net
#
#  doctor-service:
#    image: openjdk:17
#    container_name: doctor-service
#    working_dir: /app
#    volumes:
#      - ./doctor-service/target:/app
#    command: ["java", "-jar", "doctor-service-0.0.1-SNAPSHOT.jar"]
#    ports:
#      - "8081:8081"
#    depends_on:
#      - eureka-server
#      - postgres
#      - pgadmin
#    networks:
#      - clinic-net
#
#  patient-service:
#    image: openjdk:17
#    container_name: patient-service
#    working_dir: /app
#    volumes:
#      - ./patient-service/target:/app
#    command: ["java", "-jar", "patient-service-0.0.1-SNAPSHOT.jar"]
#    ports:
#      - "8082:8082"
#    depends_on:
#      - eureka-server
#      - postgres
#      - pgadmin
#    networks:
#      - clinic-net
#
#  appointment-service:
#    image: openjdk:17
#    container_name: appointment-service
#    working_dir: /app
#    volumes:
#      - ./appointment-service/target:/app
#    command: ["java", "-jar", "appointment-service-0.0.1-SNAPSHOT.jar"]
#    ports:
#      - "8083:8083"
#    depends_on:
#      - doctor-service
#      - patient-service
#      - eureka-server
#      - postgres
#      - pgadmin
#    networks:
#      - clinic-net

networks:
  microservice-network:
    driver: bridge
  clinic-net:
    driver: bridge

volumes:
  postgres:
  pgadmin:
